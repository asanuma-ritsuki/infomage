<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="C1CommandHolder1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>